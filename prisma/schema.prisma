// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_in        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id                String      @id @default(cuid())
  name              String?
  email             String?     @unique
  emailVerified     DateTime?
  password          String?     @db.Text
  image             String?
  lastFailedAttempt DateTime?
  failedAttempts    Int         @default(0)
  accounts          Account[]
  sessions          Session[]
  bookings          Booking[]
  Anmeldung         Anmeldung[]

  @@index([email])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Booking {
  id                        String   @id @default(cuid())
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  userId                    String
  status                    String   @default("draft")
  visa                      String
  visaType                  String
  citizenship               String
  applicants                String
  familyMember              String
  cizitenshipOfFamilyMember String?
  firstName                 String
  lastName                  String
  email                     String
  birthDate                 String
  currentVisa               String?
  numberOfCurrentVisa       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([status])
  @@index([email])
}

model Anmeldung {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  status    String   @default("draft")
  firstName String
  lastName  String
  email     String
  place     String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([status])
}

model CronLogs {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  message   String
}
